<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Zach Peng&#39;s Blog</title>
    <link>https://zhipzhang.github.io/zh/</link>
    <description>Recent content on Zach Peng&#39;s Blog</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 18 Dec 2024 13:16:41 +0800</lastBuildDate>
    <atom:link href="https://zhipzhang.github.io/zh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>探究Bash</title>
      <link>https://zhipzhang.github.io/zh/intro_bash/</link>
      <pubDate>Wed, 18 Dec 2024 13:16:41 +0800</pubDate>
      <guid>https://zhipzhang.github.io/zh/intro_bash/</guid>
      <description>&lt;h1 id=&#34;a-simple-bash-implementation&#34;&gt;A simple Bash Implementation&lt;/h1&gt;
&lt;p&gt;相信很多人在学习 Linux 时，接触到的第一个程序就是 Bash。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;什么？你不知道什么是 Bash？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;没关系，你一定见过下面这样的命令行界面：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://zhipzhang.github.io/image/bash.png&#34; alt=&#34;bash_image&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;其实，这个以 &lt;code&gt;$&lt;/code&gt; 开头、等待你输入命令的界面，就是 Bash。&lt;/p&gt;
&lt;p&gt;在 Bash 中，我们可以通过多种方式运行程序，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;直接运行程序&lt;/strong&gt;：如 &lt;code&gt;ls -l&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用管道 (&lt;strong&gt;pipe&lt;/strong&gt;)&lt;/strong&gt;：将两个程序的输入输出连接在一起，比如&lt;code&gt; cat hello.txt | grep &amp;quot;hello&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用分号 (&lt;/strong&gt;;&lt;strong&gt;)&lt;/strong&gt;：运行多个命令，例如 &lt;code&gt;mkdir hello; echo &amp;quot;hello&amp;quot; &amp;gt; hello&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt; &amp;amp;：将任务放到后台运行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些方式背后的逻辑都由 Bash 来处理和执行。那么，它是如何实现的呢？接下来，我们以 xv6 中的 &lt;code&gt;sh.c&lt;/code&gt; 源码为例，简单探索一个 Shell 的核心功能。&lt;/p&gt;
&lt;h2 id=&#34;回顾shell的行为&#34;&gt;回顾Shell的行为&lt;/h2&gt;
&lt;p&gt;在深入代码之前，我们先来回顾一下 Shell 的常见行为：&lt;/p&gt;
&lt;p&gt;​	1. &lt;strong&gt;直接输入命令&lt;/strong&gt;：比如 ls，结果会立即显示到屏幕上，随后等待输入下一条命令。&lt;/p&gt;
&lt;p&gt;​	2. &lt;strong&gt;运行耗时命令&lt;/strong&gt;：例如删除一个包含大量文件的文件夹时，Bash 会暂停，直到操作完成。&lt;/p&gt;
&lt;p&gt;​	3. &lt;strong&gt;后台运行命令&lt;/strong&gt;：使用 &amp;amp;，如 sleep 10 &amp;amp;，Bash 会立即返回提示符，不会阻塞。&lt;/p&gt;
&lt;p&gt;基于以上行为，一个简单的 Bash 实现可能类似如下代码&lt;/p&gt;</description>
    </item>
    <item>
      <title>感谢过去的我</title>
      <link>https://zhipzhang.github.io/zh/thanks_past_me/</link>
      <pubDate>Wed, 11 Dec 2024 15:35:06 +0800</pubDate>
      <guid>https://zhipzhang.github.io/zh/thanks_past_me/</guid>
      <description>&lt;p&gt;其实回想起来，从很早之前，我常常开始苛求着自己。或是在每天晚上感慨着今天又没有完成什么，又或是抱怨着过去的基础真的太差了。默默想来，我似乎从没有正视过过去的自己。大部分时间，我在自卑中度过，偶尔在完成一个小的里程碑的时候，又被自负所包围。&lt;/p&gt;
&lt;p&gt;如果正视现在的我，我到底是什么样的呢？过去两三年我似乎总有各种各样想做的，想学的事情：数学，线性代数，概率论，基础的物理学，辐射，计算机系统，计算机网络，编程&amp;hellip;.这么多的事情压的我喘不过气来。每天从早到晚想的都是如何能够多学一点，如何能够掌握的更多一些。大量的时间投入其中，但过去的我好像总在原地打转着，同一个知识点翻来覆去的看&amp;hellip;有时候才发现一本看了好几遍的书，甚至还是在看着前面的几章部分。稍微复杂、困难的部分还是每次都读不下去。思来想去，或许我错了。&lt;/p&gt;
&lt;p&gt;或许不是我不够努力、或许不是我不够聪明。而是我确实想要的太多了，很多时候我明显感觉到我太疲倦了，只是不断麻木的往前走着。生怕一停下来，与别人的距离就会越来越远。可是，扪心自问的话，我到底想要的是什么？很多时候不太理解我到底是被什么所驱使着。成功？功利心？已经这么活着太久了，所以好像越来越分不清哪些事情是我真正想做，哪些事情是因为功利心我逼着自己做了。&lt;/p&gt;
&lt;p&gt;如果有一天，我不再追求什么，我不再蒙蔽自己。那个时候，我会想做什么呢？不是为了成功，不是为了赚大钱，只是为了自己开心。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ctapipe data analysis for LACT</title>
      <link>https://zhipzhang.github.io/zh/ctapipe_example/</link>
      <pubDate>Wed, 16 Oct 2024 20:16:41 +0800</pubDate>
      <guid>https://zhipzhang.github.io/zh/ctapipe_example/</guid>
      <description>&lt;p&gt;&lt;code&gt;ctapipe&lt;/code&gt;是CTA中对&lt;code&gt;sim_telarray&lt;/code&gt;生成的文件进行分析的软件包，其中包括对波形积分、图像清理、重建等过程。之前开发的&lt;code&gt;LAST&lt;/code&gt;实际很大一部分基于&lt;code&gt;ctapipe&lt;/code&gt;进行开发，在未来我们也会以&lt;code&gt;ctapipe&lt;/code&gt;为样本开发下一版本的&lt;code&gt;LAST&lt;/code&gt;程序。因此在这里我们以&lt;code&gt;ctapipe&lt;/code&gt;为基础，对重建的文件进行相应的分析。&lt;/p&gt;
&lt;h2 id=&#34;模拟数据的产生&#34;&gt;模拟数据的产生&lt;/h2&gt;
&lt;p&gt;首先我们使用&lt;code&gt;corsika_run&lt;/code&gt;产生相应的corsika的数据，并使用&lt;code&gt;sim_telarray&lt;/code&gt;进行相应的模拟。运行的脚本如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;corsika_run --run-number &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --corsika-path ~/Software/corsika-77410/run/corsika77410Linux_QGSII_urqmd --atmosphere &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --altitude &lt;span style=&#34;color:#ae81ff&#34;&gt;4400&lt;/span&gt; --template ./corsika.input
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# iact.zst will show in run000001&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sim_telarray -i run000001/iact.zst -o simtel.zst
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;值得注意的是，为了全面的使用&lt;code&gt;ctapipe&lt;/code&gt;，我们使用了完整的模拟参数，即对电子学波形也进行了相应的模拟，目前是基本上完全基于&lt;code&gt;HESS&lt;/code&gt;的电子学参数。&lt;/p&gt;
&lt;h2 id=&#34;原始数据的分析&#34;&gt;原始数据的分析&lt;/h2&gt;
&lt;p&gt;在下面我们展示了使用&lt;code&gt;ctapipe&lt;/code&gt;读取&lt;code&gt;simtel.zst&lt;/code&gt;文件，并进行相应的波形积分、参数化等过程。
&lt;p&gt;
  &lt;a href=&#34;https://zhipzhang.github.io//jupyter/ctapipe-example.html&#34;
    &gt;Click here to view this notebook in full screen&lt;/a
  &gt;
&lt;/p&gt;
&lt;iframe
  src=&#34;https://zhipzhang.github.io//jupyter/ctapipe-example.html&#34;
  style=&#34;height:5000px;width:100%;border:none;overflow:hidden;&#34;
  scrolling=&#34;no&#34;
&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2 id=&#34;数据的重建过程&#34;&gt;数据的重建过程&lt;/h2&gt;
&lt;p&gt;除了可以对原始数据进行分析，我们还可以很方便的对数据进行相应的重建。下面我们展示对&lt;code&gt;simtel.zst&lt;/code&gt;文件进行重建的过程。&lt;/p&gt;
&lt;p&gt;
  &lt;a href=&#34;https://zhipzhang.github.io//jupyter/ctapipe-reco.html&#34;
    &gt;Click here to view this notebook in full screen&lt;/a
  &gt;
&lt;/p&gt;
&lt;iframe
  src=&#34;https://zhipzhang.github.io//jupyter/ctapipe-reco.html&#34;
  style=&#34;height:1800px;width:100%;border:none;overflow:hidden;&#34;
  scrolling=&#34;no&#34;
&gt;&lt;/iframe&gt;

&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>Sim_telarray LACT_PROD0 配置解读</title>
      <link>https://zhipzhang.github.io/zh/simtelarrayconfiguration/</link>
      <pubDate>Mon, 14 Oct 2024 15:58:58 +0800</pubDate>
      <guid>https://zhipzhang.github.io/zh/simtelarrayconfiguration/</guid>
      <description>&lt;p&gt;在&lt;code&gt;sim_telarray&lt;/code&gt;中存在大量可以进行配置的文件。在这里我们对&lt;code&gt;LACT_PROD0&lt;/code&gt;的配置进行解读，值得注意的是，考虑到现阶段&lt;code&gt;LACT&lt;/code&gt;望远镜的配置还没有完全确定，在配置文件中我们很大程度参考了&lt;code&gt;HESS&lt;/code&gt;的配置。&lt;/p&gt;
&lt;h2 id=&#34;配置概括&#34;&gt;配置概括&lt;/h2&gt;
&lt;p&gt;所有配置的入口文件为&lt;code&gt;cfg/lact/lact.cfg&lt;/code&gt;,在这里我们使用&lt;code&gt;include&lt;/code&gt;语句将其他配置文件引入。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include &amp;lt;LACT-camera.cfg&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了方便配置我们将配置文件分为了以下几个模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LACT-site.cfg&lt;/code&gt;: 站点的配置信息，包括海拔、大气模型等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LACT-common.cfg&lt;/code&gt;: 包括模拟中的一些基本信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LACT-optics.cfg&lt;/code&gt;: 包括光学参数的配置信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LACT-camera.cfg&lt;/code&gt;: 包括相机参数的配置信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LACT-sipm.cfg&lt;/code&gt;: 包括SipM参数配置信息&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Sim_telarray 工具包改装计划</title>
      <link>https://zhipzhang.github.io/zh/simtelarrayadaption1/</link>
      <pubDate>Mon, 14 Oct 2024 14:16:25 +0800</pubDate>
      <guid>https://zhipzhang.github.io/zh/simtelarrayadaption1/</guid>
      <description>&lt;p&gt;考虑到在LACT模拟中需要大量依赖于&lt;code&gt;hessioxxx&lt;/code&gt;以及&lt;code&gt;sim_telarray&lt;/code&gt;工具包，而这两个工具包编译的过程比较繁琐，所以这里打算将这两个工具包进行改装，使其能够适应LACT的模拟需求。&lt;/p&gt;
&lt;h2 id=&#34;hessioxxx改装思路&#34;&gt;hessioxxx改装思路&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;hessioxxx&lt;/code&gt;中，其存在大量为&lt;code&gt;CTA&lt;/code&gt;以及&lt;code&gt;HESS&lt;/code&gt;等项目定制的参数配置，因此在&lt;code&gt;LACT&lt;/code&gt;进行使用的过程中及其不方便。考虑到最小化我们的修改情况，我们使用&lt;code&gt;LACT_PROD&lt;/code&gt;参数来进行一键的配置。配置后我们可以使用下面的代码直接进行安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make EXTRA_OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;-DLACT_PROD0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下是LACT_PROD0参数配置的说明表格：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;参数&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;值&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H_MAX_TEL&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;32&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;最大望远镜数量&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H_MAX_PIX&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3000&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;每个望远镜的最大像素数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H_MAX_GAINS&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;每个像素的最大增益通道数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H_MAX_PIXSECTORS&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;19&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;每个像素最多可以在多少个扇区之中&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H_MAX_SECTORS&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H_MAX_PIX * 2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;最大扇区数，为最大像素数的两倍&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H_MAX_SLICES&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;128&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;最大采样的时间(ns)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;修改的第二个部分则为目前的&lt;code&gt;eventio&lt;/code&gt;格式中并不支持原生的&lt;code&gt;xrootd&lt;/code&gt;读取和写入，目前我们使用&lt;code&gt;xrdcf&lt;/code&gt;来进行包装来暂时解决这个问题。&lt;/p&gt;
&lt;h2 id=&#34;sim_telarray改装思路&#34;&gt;sim_telarray改装思路&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;sim_telarray&lt;/code&gt;中情况也是类似，在&lt;code&gt;Makefile&lt;/code&gt;中我们进行了优化，使其和&lt;code&gt;hessioxxx&lt;/code&gt;类似能够一键配置。除此之外，为了与&lt;code&gt;LACT&lt;/code&gt;相互搭配，下面的变化也被引入其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认的配置路径添加了cfg/lact&lt;/li&gt;
&lt;li&gt;默认的配置文件改为了cfg/lact/lact.cfg&lt;/li&gt;
&lt;li&gt;新增了lact_defaults.h文件，用于存放LACT的默认配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;code&gt;sim_telarray&lt;/code&gt;中，我们添加了选项&lt;code&gt;--rmt&lt;/code&gt;，当读取&lt;code&gt;EOS&lt;/code&gt;文件的时候，可以使用该选项。&lt;/p&gt;
&lt;p&gt;除此之外，为了更好细致的使用&lt;code&gt;sim_telarray&lt;/code&gt;，我们对配置文件进行了相应的升级。目前的配置极大程度上依赖于&lt;code&gt;HESS&lt;/code&gt;的电子学以及相应的光学参数。但这也是我们走向完整模拟的必经之路。
关于sim_telarray的详细配置，可以参考&lt;a href=&#34;https://zhipzhang.github.io/zh/SimTelarrayConfiguration&#34;&gt;sim_telarray配置-LACT_PROD0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Corsika输入卡介绍</title>
      <link>https://zhipzhang.github.io/zh/corsikainputcard/</link>
      <pubDate>Thu, 10 Oct 2024 10:48:35 +0800</pubDate>
      <guid>https://zhipzhang.github.io/zh/corsikainputcard/</guid>
      <description>&lt;h2 id=&#34;典型的-corsika-输入卡介绍&#34;&gt;典型的 Corsika 输入卡介绍&lt;/h2&gt;
&lt;p&gt;以下是一个典型的 Corsika 输入卡的参数说明：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;参数&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;值&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;RUNNR&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;运行编号&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;EVTNR&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;事件起始编号&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;NSHOW&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1000&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;模拟事件数量&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PRMPAR&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;初始粒子类型（1 表示伽马光子）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ESLOPE&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1.0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;能谱指数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ERANGE&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1 100&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;能量范围（单位：GeV）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;THETAP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0.0 0.0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;天顶角范围（单位：度）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PHIP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0. 0.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;方位角范围（单位：度）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;VIEWCONE&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0. 0.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;视场角范围（单位：度）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;OBSLEV&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3800.E2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;观测高度（单位：厘米）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ATMOSPHERE&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1 F&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;大气模型（1 表示热带模型，F 表示不考虑大气折射）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MAGNET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0.001 0.001&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;地磁场（单位：高斯）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ARRANG&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;望远镜阵列的旋转角度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;CERSIZ&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;切伦科夫光子束中光子的数量&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;CERFIL&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否输出切伦科夫光子文件（0 表示不输出）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;CWAVLG&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;260. 1000.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;切伦科夫光波长范围（单位：纳米）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TELESCOPE&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;X. Y. Z. R. (多行)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;望远镜位置（单位：厘米）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;CSCAT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10 800e2 0.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;簇射重用参数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FIXHEI&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0. 0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否固定第一次相互作用高度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FIXCHI&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否固定第一次相互作用深度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ELMFLG&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;T T&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否开启电磁成分和多重散射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;RADNKG&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;200.E2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;NKG 公式半径（单位：厘米）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HADFLG&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0 0 0 0 0 2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;强子相互作用标志&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ECUTS&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0.3 0.05 0.005 0.005&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;能量阈值（单位：GeV）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MUADDI&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;T&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否计算缪子附加信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MUMULT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;T&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否开启缪子多重散射&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;LONGI&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;T 20. F F&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;纵向发展输出设置&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MAXPRT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否输出单个粒子信息（0 表示不输出）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ECTMAP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1.E2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;电子-光子能量映射阈值（单位：GeV）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TSTART&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;T&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否输出起始时间&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;DATBAS&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否使用数据库&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;DEBUG&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;F 6 F 1000000&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;调试设置&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TELFIL&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;iact.zst&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;输出文件名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;DIRECT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;./&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;输出目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PAROUT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;F F&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;是否输出粒子数据&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;IACT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;多行&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;IACT 特定设置&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;SEED&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;多行&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;随机数种子&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;更详细的参数说明可以参考 &lt;a href=&#34;https://www.ikp.kit.edu/corsika/corsika_manual.pdf&#34;&gt;Corsika 官方文档&lt;/a&gt; 和 &lt;code&gt;sim_telarray&lt;/code&gt; 手册。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Corsika Introduction</title>
      <link>https://zhipzhang.github.io/zh/corsikainstall/</link>
      <pubDate>Sat, 05 Oct 2024 20:16:41 +0800</pubDate>
      <guid>https://zhipzhang.github.io/zh/corsikainstall/</guid>
      <description>&lt;p&gt;TODO: 补充Corisika的输入卡选项介绍， 补全读取粒子文件/切伦科夫光子文件的程序。&lt;/p&gt;
&lt;p&gt;Corsika 是一个对大气簇射进行模拟的程序，其可以模拟各种高能粒子在大气中发展的过程。具体信息可以参考&lt;a href=&#34;https://www.iap.kit.edu/corsika&#34;&gt;Corsika官网&lt;/a&gt;并下载相应的用户手册。&lt;/p&gt;
&lt;h1 id=&#34;corsika-安装&#34;&gt;Corsika 安装&lt;/h1&gt;
&lt;p&gt;在这里我们利用Konrad提供的代码对Corsika进行安装，使用Konrad的脚本安装时我们不需要手动使用./coconut，只需直接运行脚本即可。在安装之前，我们首先需要预下载两个文件：&lt;a href=&#34;https://zhipzhang.github.io/downloads/gen_config&#34;&gt;gen_config&lt;/a&gt;和&lt;a href=&#34;https://zhipzhang.github.io/downloads/corsika_build_script&#34;&gt;corsika_build_script&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;安装的步骤&#34;&gt;安装的步骤&lt;/h2&gt;
&lt;p&gt;下载&lt;a href=&#34;https://zhipzhang.github.io/downloads/gen_config&#34;&gt;gen_config&lt;/a&gt;和&lt;a href=&#34;https://zhipzhang.github.io/downloads/corsika_build_script&#34;&gt;corsika_build_script&lt;/a&gt;， 将gen_config文件放置于bernlohr目录下，将corsika_build_script文件放置于corsika目录下。使用&lt;code&gt;chmod +x&lt;/code&gt;对两个文件赋予执行权限。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x gen_config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x corsika_build_script
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着我们就可以直接使用&lt;code&gt;./corsika_build_script&lt;/code&gt;运行安装Corsika了。在安装中我们可以指定多个选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;qgsII/epos/nexus: 选择对应的高能模型&lt;/li&gt;
&lt;li&gt;urqmd/fluka: 选择对应的低能模型&lt;/li&gt;
&lt;li&gt;iact: 选择是否安装IACT模块&lt;/li&gt;
&lt;li&gt;iactext: 是否选择让输出的文件包括扩展块：比如原初粒子信息等&lt;/li&gt;
&lt;li&gt;cerwlen: 是否考虑不同光子的波长，如果选择的话，短波长下对应的bunch size会变大。&lt;/li&gt;
&lt;li&gt;viewcone: 在扩展源下需要使用该选项&lt;/li&gt;
&lt;li&gt;volumecorr/volumedet: 选择探测器的类型： KM2A类粒子探测器/IACT&lt;/li&gt;
&lt;li&gt;atmext: 是否使用表状的大气模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一些选项的讨论&#34;&gt;一些选项的讨论&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在选择&lt;code&gt;cerwlen&lt;/code&gt;选项之后，所有的光子都会按照$\lambda^{-2}$的权重进行抽样，在短波处所对应的光子的数目会更多。除此之外，在该选项下会考虑不同波长所对应的折射率的不同，因此不同的光子所对应的发射角度也会不同。在接近阈值的情况下，该选项对结果的影响会更大。考虑到在该选项下，相同bunch size会对应着同样的波长，因此需要选择更小的bunch size。&lt;/li&gt;
&lt;li&gt;默认一般情况下对应的配置选项为：&lt;code&gt;iact atmext viewcone qgsII urqmd&lt;/code&gt;
因此使用下面代码进行安装：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./corsika_build_script iact atmext viewcone qgsII urqmd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;corsika-使用&#34;&gt;Corsika 使用&lt;/h1&gt;
&lt;p&gt;安装完成之后，我们需要就可以使用coriksa进行相应的模拟了。在corsika的run目录下会包含对应的可执行文件，例如:&lt;code&gt;corsika77410Linux_QGSII_urqmd&lt;/code&gt;。将输入卡作为该程序的标准输入，就可以进行模拟了。在pylast中，我们使用&lt;code&gt;corsika_run&lt;/code&gt;程序可以直接建立相应的工作目录开始相应的的模拟。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;corsika_run --run-number &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --corsika-path ~/Software/corsika-77410/run/corsika77410Linux_QGSII_urqmd --atmosphere &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;atmosphere&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; --altitude &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;altitude&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; --template &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;current_dir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/template.input
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述代码中，我们使用&lt;code&gt;--run-number&lt;/code&gt;指定当前运行的run number，使用&lt;code&gt;--corsika-path&lt;/code&gt;指定corsika程序的路径，使用&lt;code&gt;--atmosphere&lt;/code&gt;指定大气模型，使用&lt;code&gt;--altitude&lt;/code&gt;指定海拔高度，使用&lt;code&gt;--template&lt;/code&gt;指定模版输入卡的路径。上述命令会在当前目录下建立一个工作目录：&lt;code&gt;run000001&lt;/code&gt;，并自动运行corsika程序,&lt;code&gt;corsika.input&lt;/code&gt;为对应的输入卡，&lt;code&gt;corsika.output&lt;/code&gt;为对应的输出日志。输入卡的配置可以参照&lt;a href=&#34;https://zhipzhang.github.io/zh/CorsikaInputCard&#34;&gt;输入卡配置&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
